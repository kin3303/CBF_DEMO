##docker stack deploy efservice --compose-file efservice.yml

version: '3'

services:
  visualizer:
    image: dockersamples/visualizer:stable
    deploy:
      placement:
        constraints: [node.role == manager]
    ports:
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - private  

  zookeeper1:
    image: zookeeper
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
    hostname: zookeeper1 
    networks:
      - private  

  zookeeper2:
    image: zookeeper
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
    hostname: zookeeper2 
    networks:
      - private  

  zookeeper3:
    image: zookeeper
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
    hostname: zookeeper3
    networks:
      - private  
	  
  localagent:
    image: kin3303/commanderagent:${TAG}
    volumes:
      - my-plugins:/opt/electriccloud/electriccommander/plugins
      - my-workspace:/opt/electriccloud/electriccommander/workspace
    depends_on:
      - commanderserver
    networks:
      - private  
	 
  repository:
    image: kin3303/commanderrepository:${TAG}
    volumes:
      - my-plugins:/opt/electriccloud/electriccommander/plugins
      - my-workspace:/opt/electriccloud/electriccommander/workspace
      - my-repository:/opt/electriccloud/electriccommander/repository-data
    networks:
     - private  
	 
  db:
    image: mysql:5.7
    volumes:
      - my-db:/var/lib/mysql
      - "$PWD/data/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf"
    environment:
      MYSQL_ROOT_PASSWORD: ecdb
      MYSQL_DATABASE: ecdb
      MYSQL_USER: ecdb
      MYSQL_PASSWORD: ecdb
    hostname: db
    networks:
     - private  
	 
  commanderserver:
    image: kin3303/commanderserver:${TAG}
    ports:
      - 8000
    volumes:
      - my-plugins:/opt/electriccloud/electriccommander/plugins
      - my-workspace:/opt/electriccloud/electriccommander/workspace
      - my-conf:/opt/electriccloud/electriccommander/conf
      - my-scripts:/tmp/scripts
    depends_on:
      - db
      - zookeeper1
    environment:
      WAIT_HOSTS: db:3306
      WAIT_HOSTS_TIMEOUT: 180
    hostname: commanderserver
    networks:
     - proxy_public
     - private      
    deploy:
      replicas: 1
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.servicePath=/
        - com.df.reqPathSearch=/
        - com.df.reqPathReplace=/
        - com.df.port=8000
		
  commanderapache:
    image: kin3303/commanderapache:${TAG}
    ports:
      - 80
    volumes:
      - my-plugins:/opt/electriccloud/electriccommander/plugins
      - my-workspace:/opt/electriccloud/electriccommander/workspace
    depends_on:
      - commanderserver
    hostname: commanderapache
    networks:
     - proxy_public
     - private      
    deploy:
      replicas: 1
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.servicePath=/result/
        - com.df.reqPathSearch=/result/
        - com.df.reqPathReplace=/
        - com.df.port=80

volumes:
  my-db:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/data/db-data/
  my-plugins:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/data/plugins/
  my-workspace:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/data/workspace/
  my-conf:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/data/conf/
  my-scripts:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/scripts/
  my-repository:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/data/repository-data/

networks:
  private:
  proxy_public:
    external: true	
