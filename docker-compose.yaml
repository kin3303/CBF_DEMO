version: '3.4'

x-include:
  commanderserver: &commanderserver
    image: "kin3303/commanderserver:${TAG}"
    restart: always
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
      - ${PWD}/data/conf:/opt/electriccloud/electriccommander/conf
      - ${PWD}/scripts:/tmp/scripts
    ports:
      - 8000
    environment:
      WAIT_HOSTS: db:3306
      WAIT_HOSTS_TIMEOUT: 180
 
  commanderapache: &commanderapache
    image: "kin3303/commanderapache:${TAG}"
    restart: always
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace

  commanderagent: &commanderagent
    image: "kin3303/commanderagent:${TAG}"
    restart: always
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace

  commanderrepository: &commanderrepository
    image: "kin3303/commanderrepository:${TAG}"
    restart: always
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
      - ${PWD}/data/repository-data:/opt/electriccloud/electriccommander/repository-data

  commanderinsight: &commanderinsight
    image: "kin3303/commanderinsight:${TAG}"
    restart: always
    volumes:
      - ${PWD}/scripts:/tmp/scripts
      - ${PWD}/data/insight-data:/usr/share/elasticsearch/backup
      
  zookeeper: &zookeeper
    image: zookeeper:3.3
    restart: always

services:     
  db:
    image: mysql:5.7
    restart: always
    volumes:
      - ${PWD}/data/db-data:/var/lib/mysql
      - ${PWD}/data/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
      - ${PWD}/scripts:/tmp/scripts
    environment:
      MYSQL_ROOT_PASSWORD: ecdb
      MYSQL_DATABASE: ecdb
      MYSQL_USER: ecdb
      MYSQL_PASSWORD: ecdb
    hostname: db
    container_name: db
    
  zookeeper1:
    << : *zookeeper
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
    hostname: zookeeper1
    container_name: zookeeper1
    
  zookeeper2:
    << : *zookeeper
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
    hostname: zookeeper2
    container_name: zookeeper2
    
  zookeeper3:
    << : *zookeeper
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
    hostname: zookeeper3
    container_name: zookeeper3
    
  interlock:
    image: ehazlett/interlock:1.4.0
    restart: always
    command: run -c /etc/interlock/config.toml
    volumes:
        - ${PWD}/data/interlock/config.toml:/etc/interlock/config.toml
        - ${PWD}/data/interlock/haproxy.cfg.template:/usr/local/etc/interlock/haproxy.cfg.template
        - /var/run/docker.sock:/var/run/docker.sock
    hostname: interlock
    container_name: interlock
        
  commanderserver:
    << : *commanderserver
    labels:
        - "interlock.hostname=commanderserver"
        - "interlock.domain=local"
    links:
      - db
      - insight
    depends_on:
      - db
      - zookeeper1
    hostname: commanderserver
    container_name: commanderserver
    
  commanderapache:
    <<: *commanderapache
    depends_on:
      - commanderserver
    hostname: commanderapache
    container_name: commanderapache

  haproxy:
    #image: kin3303/commanderproxy
    image: haproxy:1.9.0
    restart: always
    volumes:
      - ${PWD}/data/haproxy/:/usr/local/etc/haproxy/
    ports:
      - 80:80
      - 443:443
      - 8000:8000
      - 8443:8443
      - 1936:1936
    labels:
        - "interlock.ext.name=haproxy"
    links:
        - interlock:interlock
    depends_on:
        - interlock
        - commanderserver
    environment:
      WAIT_HOSTS: commanderserver:8000
      WAIT_HOSTS_TIMEOUT: 600
    hostname: haproxy
    container_name: haproxy
    
  localagent:
    <<: *commanderagent
    depends_on:
      - commanderserver
    hostname: localagent
    container_name: localagent
    
  devagent:
    image: kin3303/demowebagent
    ports:
      - "8060:8080"
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
    hostname: devagent
    container_name: devagent
    
  qaagent:
    image: kin3303/demowebagent
    ports:
      - "8070:8080"
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
    hostname: qaagent
    container_name: qaagent
    
  prodagent:
    image: kin3303/demowebagent
    ports:
      - "8080:8080"
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
    hostname: prodagent
    container_name: prodagent
    
  repository:
    <<: *commanderrepository
    depends_on:
      - commanderserver    
    hostname: repository
    container_name: repository
    
  insight:
    <<: *commanderinsight
    hostname: insight
    container_name: insight
