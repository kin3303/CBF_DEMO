version: '3.4'

x-include:
  commanderserver: &commanderserver
    image: "kin3303/commanderserver:${TAG}"
    restart: always
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
      - ${PWD}/data/license:/tmp/license
      - ${PWD}/scripts:/tmp/scripts
    ports:
      - 8000
    environment:
      WAIT_HOSTS: db:3306
      WAIT_HOSTS_TIMEOUT: 180
 
  commanderapache: &commanderapache
    image: "kin3303/commanderapache:${TAG}"
    restart: always
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace

  commanderagent: &commanderagent
    image: "kin3303/commanderagent:${TAG}"
    restart: always
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace

  commanderrepository: &commanderrepository
    image: "kin3303/commanderrepository:${TAG}"
    restart: always
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
      - ${PWD}/data/repository-data:/opt/electriccloud/electriccommander/repository-data

  commanderinsight: &commanderinsight
    image: "kin3303/commanderinsight:${TAG}"
    restart: always
    volumes:
      - ${PWD}/scripts:/tmp/scripts
      - ${PWD}/data/insight-data:/usr/share/elasticsearch/backup
      
  sonar: &sonar
    image: sonarqube
    restart: always
    ports:
      - 9000
      - 9092

services:     
  db:
    image: mysql:5.6
    restart: always
    volumes: 
      - ${PWD}/data/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
      - ${PWD}/data/mysql/scripts:/docker-entrypoint-initdb.d
      - ${PWD}/scripts:/tmp/scripts
    environment:
      MYSQL_ROOT_PASSWORD: ecdb
      MYSQL_DATABASE: ecdb
      MYSQL_USER: ecdb
      MYSQL_PASSWORD: ecdb
    hostname: db
    container_name: db
        
  flow:
    << : *commanderserver
    links:
      - db
      - insight
      - sonarqube
    depends_on:
      - db
    ports:
      - 8000:8000
      - 1936:1936
    hostname: flow
    container_name: flow
    
  web:
    <<: *commanderapache
    depends_on:
      - flow
    ports:
      - 80:80
      - 443:443
    hostname: web
    container_name: web
    
  localagent:
    <<: *commanderagent
    depends_on:
      - flow
    hostname: localagent
    container_name: localagent

  repository:
    <<: *commanderrepository
    depends_on:
      - flow    
    hostname: repository
    container_name: repository
    
  insight:
    <<: *commanderinsight
    hostname: insight
    container_name: insight
    
  sonarqube: 
    <<: *sonar
    hostname: sonarqube 
    container_name: sonarqube

###################################################################################################################
#  If you don't want to use demo that I made, please delete follow lines.
###################################################################################################################
  devagent:
    image: kin3303/demoagentdev
    ports:
      - 8060:8080
      - 9990:9990
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
    hostname: devagent
    container_name: devagent
    
  qaagent:
    image: kin3303/demoagentdev
    ports:
      - 8070:8080
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
    hostname: qaagent
    container_name: qaagent
    
  prodagent:
    image: kin3303/demoagentdev
    ports:
      - 8080:8080
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
    hostname: prodagent
    container_name: prodagent
