version: '3.4'

x-include:
  commanderserver: &commanderserver
    image: "kin3303/commanderserver:${TAG}"
    restart: always
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
      - ${PWD}/data/license:/tmp/license
      - ${PWD}/scripts:/tmp/scripts
    ports:
      - 8000
    environment:
      WAIT_HOSTS: db:3306
      WAIT_HOSTS_TIMEOUT: 180
 
  commanderapache: &commanderapache
    image: "kin3303/commanderapache:${TAG}"
    restart: always
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace

  commanderagent: &commanderagent
    image: "kin3303/commanderagent:${TAG}"
    restart: always
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace

  commanderrepository: &commanderrepository
    image: "kin3303/commanderrepository:${TAG}"
    restart: always
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
      - ${PWD}/data/repository-data:/opt/electriccloud/electriccommander/repository-data

  commanderinsight: &commanderinsight
    image: "kin3303/commanderinsight:${TAG}"
    restart: always
    volumes:
      - ${PWD}/scripts:/tmp/scripts
      - ${PWD}/data/insight-data:/usr/share/elasticsearch/backup

services:     
  db:
    image: mysql:5.6
    restart: always
    volumes: 
      - ${PWD}/data/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
      - ${PWD}/data/mysql/scripts:/docker-entrypoint-initdb.d
      - ${PWD}/scripts:/tmp/scripts
      - flow-db-volume:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ecdb
      MYSQL_DATABASE: ecdb
      MYSQL_USER: ecdb
      MYSQL_PASSWORD: ecdb
    hostname: db
    container_name: db
        
  flow:
    << : *commanderserver
    links:
      - db
      - insight
#     - sql-server-db
    depends_on:
      - db
    ports:
      - 8000:8000
      - 1936:1936
      - 8443:8443
      - 61613:61613
    hostname: flow
    container_name: flow
    
  web:
    <<: *commanderapache
    depends_on:
      - flow
    ports:
      - 80:80
      - 443:443
    hostname: web
    container_name: web
    
  localagent:
    <<: *commanderagent
    depends_on:
      - flow
    hostname: localagent
    container_name: localagent

  repository:
    <<: *commanderrepository
    depends_on:
      - flow    
    hostname: repository
    container_name: repository
    
  insight:
    <<: *commanderinsight
    hostname: insight
    container_name: insight 

  portainer:
    image: portainer/portainer:latest
    command: -H unix:///var/run/docker.sock
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

###################################################################################################################
#  For Sonarqube install
###################################################################################################################
  sonarqube:
    image: sonarqube:7.7-community
    environment:
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=mypass
      - sonar.jdbc.url=jdbc:postgresql://sonarqubedb:5432/sonarqube
    volumes:
      - sonarqube-conf-volume:/opt/sonarqube/conf
      - sonarqube-extensions-volume:/opt/sonarqube/extensions
      - sonarqube-logs-volume:/opt/sonarqube/logs
      - sonarqube-data-volume:/opt/sonarqube/data 
    ports:
      - 9100:9000

  sonarqubedb:
    image: postgres:12.1
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=mypass
      - POSTGRES_DB=sonarqube
    volumes:
      - sonarqube-db-volume:/var/lib/postgresql/data

###################################################################################################################
#  For Jenkins install
###################################################################################################################
  jenkins:
    image: kin3303/jenkins-docker
    volumes:
      - jenkins-data-volume:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=Asia/Seoul 
    ports:
      - 9200:8080

###################################################################################################################
#  For Nexus install
###################################################################################################################
  nexus:
    image: sonatype/nexus3
    volumes:
      - nexus-data-volume:/nexus-data
    ports:
      - 9300:8081
      - 9400:5000

###################################################################################################################
#  For MsSQL Connection Test  
#   - Need to add connector to '/opt/electriccloud/electriccommander/server/lib' folder of flow container inside.
#   - Need to add volume named mssql-volume
#   - Need to link with flow service
###################################################################################################################
#  sql-server-db:
#    container_name: sql-server-db
#    image: microsoft/mssql-server-linux:2017-latest
#    ports:
#      - 1433:1433
#    environment:
#      - SA_PASSWORD=yourStrong(!)Password
#      - ACCEPT_EULA=Y
#    volumes:
#      - mssql-volume:/var/opt/mssql

###################################################################################################################
# For Demo Project
###################################################################################################################
  devagent:
    image: kin3303/demoagentdev
    ports:
      - 8060:8080
      - 9960:9990
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
    hostname: devagent
    container_name: devagent

  qaagent:
    image: kin3303/demoagentdev
    ports:
      - 8070:8080
      - 9970:9990
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
    hostname: qaagent
    container_name: qaagent
    
  prodagent:
    image: kin3303/demoagentdev
    ports:
      - 8080:8080
      - 9980:9990
    volumes:
      - ${PWD}/data/plugins:/opt/electriccloud/electriccommander/plugins
      - ${PWD}/data/workspace:/opt/electriccloud/electriccommander/workspace
    hostname: prodagent
    container_name: prodagent

volumes:
######################## For mysql
  flow-db-volume:
######################## For Sonarqube
  sonarqube-conf-volume:
  sonarqube-extensions-volume:
  sonarqube-logs-volume:
  sonarqube-data-volume:
  sonarqube-db-volume:  
######################## For Jenkins
  jenkins-data-volume:
############ For Nexus
  nexus-data-volume:
######################## For mssql
  #mssql-volume:
